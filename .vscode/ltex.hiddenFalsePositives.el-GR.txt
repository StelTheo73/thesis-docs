{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΣτο κεφάλαιο αυτό θα παρουσιάσουμε τους μηχανισμούς που διαθέτει η JavaScript για ασύγχρονη εκτέλεση κώδικα, και στη συνέχεια θα εστιάσουμε στον μηχανισμό διαχείρισης συμβάντων (events).\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΤην κλήση συνάρτησης επιστροφής (callback function),\nΤον μηχανισμό Promise όπως θα δούμε στη συνέχεια.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΟ μηχανισμός αυτός έχει επιπλέον υλοποιηθεί ως μηχανισμός async / await, όπως θα δούμε στο επόμενο κεφάλαιο.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΜε κλήση των μεθόδων του αντικειμένου window: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, η οποία επιτρέπει την εκτέλεση μιας συνάρτησης f μετά παρέλευση ορισμένου χρόνου t, ή η \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q η οποία επιτρέπει την εκτέλεση της συνάρτησης f επαναληπτικά, κάθε t ms.\\E$"}
{"rule":"GREEK_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QΜε τη χρήση της διεπαφής \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q που χρησιμεύει για ανάκτηση δεδομένων από εξυπηρετητή, με χρήση του μηχανισμού ασύγχρονης λειτουργίας Promise.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΜε τη χρήση της διεπαφής \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q που χρησιμεύει για ανάκτηση δεδομένων από εξυπηρετητή, με χρήση του μηχανισμού ασύγχρονης λειτουργίας Promise.\\E$"}
{"rule":"GREEK_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QΜε την κλήση του requestAnimationFrame για επαναληπτική εκτέλεση κώδικα ώστε να επιτύχουμε κίνηση γραφικών στοιχείων (animations).\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΜε την κλήση του requestAnimationFrame για επαναληπτική εκτέλεση κώδικα ώστε να επιτύχουμε κίνηση γραφικών στοιχείων (animations).\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΠοιος είναι λοιπόν ο τρόπος για να πάρουμε το αποτέλεσμα της double;\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΓια να δημιουργήσουμε μια υπόσχεση, καλούμε τη συνάρτηση-δημιουργό \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, στην οποία περνάμε μια συνάρτηση \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, η οποία θα εκτελέσει την ασύγχρονη εργασία.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΗ συνάρτηση εκτέλεσης \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q που περνάμε στον δημιουργό της Promise καλείται αυτόματα από τον δημιουργό του αντικειμένου Promise.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΌταν κληθεί η \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q θα αλλάξει η κατάσταση της υπόσχεσης σε \"fulfilled\", ενώ όταν κληθεί η \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q θα αλλάξει η κατάσταση σε \"rejected\".\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΌταν κληθεί η συνάρτηση \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, ως όρισμα περνάμε τα αποτελέσματα ώστε αυτά να αποτελέσουν την τιμή της ιδιότητας result της υπόσχεσης, ενώ αν κληθεί η συνάρτηση \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q σε αυτήν περνάμε το αντικείμενο \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ή το μήνυμα σφάλματος, το οποίο στην περίπτωση αυτή αποτελεί την τιμή της ιδιότητας \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q της υπόσχεσης, όπως φαίνεται στο διάγραμμα.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΗ σύνδεση ανάμεσα στον σύγχρονο και ασύγχρονο κώδικα γίνεται με τις μεθόδους καταναλωτές του αντικειμένου Promise, που περιγράφονται στη συνέχεια.\\E$"}
{"rule":"GREEK_PARTICLE_MISSING_N_2","sentence":"^\\QΣτο παράδειγμα αυτό ορίζουμε μια συνάρτηση \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q η οποία δέχεται δύο συναρτήσεις, ως ορίσματα, τις \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q και \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, οι οποίες καλούνται στο σώμα της συνάρτησης, διαβιβάζοντάς τους το αποτέλεσμα της υπόσχεσης, ή το μήνυμα σφάλματος αντίστοιχα, αφού ενεργοποιούνται στην περίπτωση επιτυχούς ή μη επιτυχούς εκπλήρωσης της υπόσχεσης.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΟι Promises εισέρχονται σε μια ουρά μικροεργασιών η οποία εξαντλείται σε κάθε κύκλο του βρόχου ελέγχου συμβάντων.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΚατά συνέπεια, η σειρά εκτέλεσης των Promises θα προηγηθεί της κλήσης συνάρτησης επιστροφής από τη μέθοδο \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, καθώς και της κλήσης του πρώτου animation frame, ενώ η εκτέλεση του τμήματος του προγράμματος που δεν περιλαμβάνει ασύγχρονη εκτέλεση κώδικα θα προηγηθεί όλων:\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qθα εγκατασταθούν όλες οι εξαρτήσεις που περιγράφονται στο \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΤο \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q είναι ένα πακέτο που ζωγραφίζει στο τερματικό τον Yoda, χαρακτήρα των ταινιών Star Wars, που λέει ό,τι του ζητήσουμε, για παράδειγμα:\\E$"}
{"rule":"GREEK_PUNC_2","sentence":"^\\QΕπίσης και τα δυο είναι συστήματα ανοικτού κώδικα και ελεύθερα διαθέσιμα.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qόπου η \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ορίζει το δείκτη του στοιχείου στο οποίο θα γίνει η τροποποίηση, η \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ορίζει το πλήθος στοιχείων που θα διαγραφούν από τη θέση αυτή και μετά, και τα \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q είναι τα στοιχεία που θα εισαχθούν στο σημείο αυτό.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qόπου x είναι μια τιμή, μ η μέση τιμή και Ν το πλήθος των τιμών.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΑυτήν μπορούμε να την ορίσουμε στο πρωτότυπο της κλάσης ώστε να την κληρονομήσουν όλα τα στιγμιότυπά της:\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\Q@sec:node_js), καθώς και για ανάπτυξη μη διαδικτυακών διαδραστικών εφαρμογών στην επιφάνεια εργασίας του υπολογιστή μας (με το περιβάλλον electron.js).\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\Q@sec:node_js), καθώς και για ανάπτυξη μη διαδικτυακών διαδραστικών εφαρμογών στην επιφάνεια εργασίας του υπολογιστή μας (με το περιβάλλον electron.js).\\E$"}
{"rule":"GREEK_PREP_ART_FEM_EXTRA_N","sentence":"^\\QΕισαγωγή στην JavaScript\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΈνα σημαντικό σημείο είναι πως, ένα στοιχείο που είναι float, δε συνεισφέρει στον υπολογισμό του ύψους του κοντέινέρ του.\\E$"}
{"rule":"MORFOLOGIK_RULE_EL_GR","sentence":"^\\QΒεβαίως, σε τέτοια περίπτωση δε γίνεται κανένας έλεγχος για τη συμβολοσειρά που εισάγει ο χρήστης, αν είναι αποδεκτή ημερομηνία και σύμφωνη με την προδιαγραφή μορφοποίησής της.\\E$"}
